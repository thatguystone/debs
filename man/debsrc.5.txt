debsrc(5)
=========
:doctype: manpage


NAME
----
debsrc - configuration file for debs

DESCRIPTION
-----------
A configuration file with all options can be found at /usr/share/doc/debs/examples/debsrc.ini


CONFIGURATION
-------------
This is standard ini file parsed with python's configparser, so you may use anything that that supports.

All lists are comma-separated.

*[debs]*::

	::
	*envs* = [all]

		Only build for these environments. This can be specified on a per-package basis, and it overrides the parent's config. Options from the command line always override this.

	::
	*remotes* = [all]

		Which remotes to upload to. This can be specified on a per-package basis, and it overrides the parent's config. Options from the command line always override this.

	::
	*packages* = [.]

		Which packages (directories, dscs) to build by default. This is superseded by packages provided on the command line.

	::
	*prompt-rebuild* = true

		If you want to be prompted to run sbuild again if it fails.

	::
	*refresh-after* = 604800

		How long to go before upgrading sbuild env (in seconds).

	::
	*batch* = false

		Assume the answer to any question is "yes"

	::
	*no-versions* = false

		Don't remember built versions. Always try to build everything.

*[packages]*::

	Sometimes it's useful to include extra packages in every schroot environment. These packages are not part of any particular build, but they're typically used (lintian, build-essential, etc), and installing them everything time is wasteful.

	::
	*all* = [LIST]

		Packages to install in every schroot

	::
	*debian* = [LIST]

		Packages to install only in debian environments

	::
	*ubuntu* = [LIST]

		Packages to install only in ubuntu environments

	::
	*<release>* = [LIST], *<release>-<arch>* = [LIST]

		Packages to install only in environments of the given release that run the given architecture. For example, this may be "jessie" or "jessie- amd64".

	::
	*<distro>* = [LIST], *<distro>-<arch>* = [LIST]

		Packages to install only in environments of the given distro that run the given architecture. For example, this may be "debian" or "debian-amd64".

*[repos]*::

	Sometimes you want to have your environments configured with a different default mirror or with extra sources lines. Got you covered.
	::
	The following variables are expanded in this section, depeneding on the environment they're being used in:

		{DIST}     debian, ubuntu, etc
		{RELEASE}  jessie, stretch, wily, utopic, etc

	::
	*debian* = http://httpredir.debian.org/debian

		Change debian's default apt mirror

	::
	*ubuntu* = http://us.archive.ubuntu.com/ubuntu/

		Change ubuntu's default apt mirror

	::
	*extra-all* = TEXT

		Add this block to the sources.list file in every environment.

	::
	*extra-debian* = TEXT, *extra-debian-amd64* = TEXT, *extra-<distro/release>-<arch>* = TEXT

		Add this block to the sources.list file in the environment matched by the given spec.

*[sbuild]*::

	::
	*jobs* = <cpu count>

		How mnay jobs to tell sbuild to run the build with.

	::
	*key* =

		Which GPG key to use to sign the generated package

	::
	*user* = <current user>

		Which user to run the build as

	::
	*user-keep-env* = false

		When running the build as a different user, should the environment of the original user be preserved (ie. `sudo -E` vs plain `sudo`)?

	::
	*lintian* = true

		Should lintian run?

	::
	*lintian-args* = -i -I

		Arguments to pass to lintian. Parsed with shlex.

	::
	*apt-upgrade* = true

		If apt sources should be updated before the build. You probably don't want to disable this.

*[env]*::

	Any key/value pairs defined here will be available in the build environment.

AUTHOR
------
Andrew Stone <a@stoney.io>


RESOURCES
---------
GitHub: <https://github.com/thatguystone/debs>


COPYRIGHT
---------
Copyright Â© 2015 Andrew Stone <a@stoney.io>

Distributed under the MIT license.
